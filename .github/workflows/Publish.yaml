name: Publish

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  Test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-java@v1
        with:
          java-version: '16'
      - name: External Dependencies
        run: docker-compose up -d
      - name: Wait
        run: sleep 15
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Maven Install
        run: mvn -B install -Psonar_cloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)

  Publish:
    needs: Test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '15'
      - name: Publish to Maven
        timeout-minutes: 20
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          DEPLOY_DIR: ".github/deploy"
        run: |
          GPG_TTY=$(tty || echo "")
          export GPG_TTY
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.FILE_ENCRYPTION_PASSWORD }}" --output $DEPLOY_DIR/marmoush.com.gpg $DEPLOY_DIR/marmoush.com.gpg.gpg
          gpg --import --no-tty --batch --yes $DEPLOY_DIR/marmoush.com.gpg
          mvn deploy --settings $DEPLOY_DIR/maven-settings.xml -P cloud_deployment
